<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns:crapp="http://baumann-digital.de/ns/criticalApparatus"
  xmlns:functx="http://www.functx.com" xmlns="http://www.tei-c.org/ns/1.0">    
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Title</title>
      </titleStmt>
      <publicationStmt>
        <p>Publication Information</p>
      </publicationStmt>
      <sourceDesc>
        <p>Information about the source</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <schemaSpec ident="odd-critRemarks" start="critApp" ns="http://baumann-digital.de/ns/criticalApparatus">
        
        <classSpec type="atts" ident="att.key">
          <attList>
            <attDef ident="key">
              <datatype><dataRef key="text"/></datatype>
            </attDef>
          </attList>
        </classSpec>
        
        <classSpec type="atts" ident="att.numbering">
          <attList>
            <attDef ident="no">
              <datatype><dataRef key="integer"/></datatype>
            </attDef>
            <attDef ident="sortNo">
              <datatype><dataRef key="integer"/></datatype>
            </attDef>
          </attList>
        </classSpec>
        
        <classSpec type="atts" ident="att.timing">
          <attList>
            <attDef ident="measure">
              <datatype><dataRef key="integer"/></datatype>
            </attDef>
            <attDef ident="count">
              <datatype><dataRef key="integer"/></datatype>
            </attDef>
          </attList>
        </classSpec>
        
        <classSpec type="atts" ident="att.siglum">
          <attList>
            <attDef ident="siglum">
              <datatype><dataRef key="text"/></datatype>
            </attDef>
          </attList>
        </classSpec>
        
        <classSpec type="atts" ident="att.target">
          <attList>
            <attDef ident="target">
              <datatype><dataRef key="URI"/></datatype>
            </attDef>
          </attList>
        </classSpec>
        
        <constraintSpec ident="content-categories" scheme="schematron">
          <constraint>
            <sch:schema xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2">
              <sch:ns uri="http://baumann-digital.de/ns/criticalApparatus" prefix="crapp"/>
              
              <xsl:function name="functx:is-value-in-sequence" as="xs:boolean"
                xmlns:functx="http://www.functx.com">
                <xsl:param name="value" as="xs:anyAtomicType?"/>
                <xsl:param name="seq" as="xs:anyAtomicType*"/>
                <xsl:sequence select="$value = $seq"/>
              </xsl:function>
              
              <xsl:function name="crapp:checkValues">
                <xsl:param name="element" as="node()"/>
                <xsl:variable name="elementName" select="local-name($element)"/>
                <xsl:variable name="elementText" select="$element/text()"/>
                <xsl:variable name="element2check" select="$element/ancestor::crapp:critApp//crapp:setting//node()[local-name()=$elementName]"/>
                <xsl:value-of select="functx:is-value-in-sequence($elementText, if($element2check/@key) then($element2check/@key) else if($element2check/@siglum) then($element2check/@siglum) else if($element2check/@no) then($element2check/@no) else($element2check/text()))"/>
              </xsl:function>
              <xsl:function name="crapp:valuesAllowed">
                <xsl:param name="element" as="node()"/>
                <xsl:variable name="elementName" select="local-name($element)"/>
                <xsl:variable name="element2check" select="$element/ancestor::crapp:critApp//crapp:setting//node()[local-name()=$elementName]"/>
                <xsl:value-of select="string-join(if($element2check/@key) then($element2check/@key) else if($element2check/@siglum) then($element2check/@siglum) else if($element2check/@no) then($element2check/@no) else($element2check/text()),', ')"/>
              </xsl:function>
              <sch:pattern id="checkValues">
                <sch:rule context="crapp:remark//crapp:source | crapp:remark//crapp:category | crapp:remark//crapp:voice | crapp:remark//crapp:mdiv"> 
                  <sch:assert test="crapp:checkValues(.) = true()" role="fatal">The value <sch:value-of select="."/> is not allowed here. Please use: <sch:value-of select="crapp:valuesAllowed(.)"/>.</sch:assert>
                </sch:rule>
              </sch:pattern>
            </sch:schema>
          </constraint>
        </constraintSpec>
        
        <elementSpec ident="critApp">
          <desc>Root element for the critical remarks.</desc>
          <content>
            <elementRef key="setting" minOccurs="1" maxOccurs="1"/>
            <elementRef key="remarks" minOccurs="1" maxOccurs="unbounded"/>
          </content>
          <attList>
            <attDef ident="relWork">
              <desc>related work. Das Werk, dem die Annotationen zugehörig sind.</desc>
              <datatype>
                <dataRef key="ID"/>
              </datatype>
            </attDef>
          </attList>
        </elementSpec>
        
        <elementSpec ident="setting">
          <desc>Die Grundinformationen (Zugehörige Quellen, Instrumente/Stimmen, Editionen)</desc>
          <content>
            <elementRef key="mdivs"/>
            <elementRef key="voices"/>
            <elementRef key="sources"/>
            <elementRef key="editions"/>
            <elementRef key="categories"/>
          </content>
        </elementSpec>
        
        <elementSpec ident="remarks">
          <content>
            <elementRef key="remark" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="remark">
          <desc>Eine kritische Anmerkung</desc>
          <content>
            <elementRef key="category"/>
            <elementRef key="mdiv"/>
            <elementRef key="occurance" maxOccurs="1"/>
            <elementRef key="voices" maxOccurs="1"/>
            <elementRef key="layers" maxOccurs="1"/>
            <elementRef key="annots"/>
            <elementRef key="sources" maxOccurs="1"/>
            <elementRef key="editions" maxOccurs="1"/>
          </content>
          <attList>
            <attDef ident="xml:id">
              <datatype>
                <dataRef key="ID"/>
              </datatype>
            </attDef>
            <attDef ident="type">
              <valList type="closed">
                <valItem ident="editorial">
                  <desc>Eingriff (Hg.)</desc>
                </valItem>
                <valItem ident="reading">
                  <desc>Lesart</desc>
                </valItem>
                <valItem ident="annotation">
                  <desc>Anmerkung (Hg.)</desc>
                </valItem>
              </valList>
            </attDef>
          </attList>
        </elementSpec>

        <elementSpec ident="categories">
          <content>
            <elementRef key="category" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="category">
          <content><textNode/></content>
        </elementSpec>
        <elementSpec ident="mdivs">
          <content>
            <elementRef key="mdiv" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="mdiv">
          <classes>
            <memberOf key="att.numbering"/>
          </classes>
          <content>
            <textNode/>
          </content>
        </elementSpec>
        
        <elementSpec ident="occurances">
          <content>
            <elementRef key="occurance" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        
        <elementSpec ident="occurance">
          <content>
            <alternate>
              <elementRef key="where"/>
              <sequence>
                <elementRef key="from"/>
                <elementRef key="to"/>
              </sequence>
            </alternate>
          </content>
        </elementSpec>
        <elementSpec ident="where">
          <classes>
            <memberOf key="att.timing"/>
          </classes>
        </elementSpec>
        <elementSpec ident="from">
          <classes>
            <memberOf key="att.timing"/>
          </classes>
        </elementSpec>
        <elementSpec ident="to">
          <classes>
            <memberOf key="att.timing"/>
          </classes>
        </elementSpec>
        
        <elementSpec ident="voices">
          <desc>A Wrapper for voices (voice-elements)</desc>
          <content>
            <elementRef key="voice" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="voice">
          <classes>
            <memberOf key="att.key"/>
            <memberOf key="att.numbering"/>
          </classes>
          <content>
            <textNode/>
          </content>
        </elementSpec>
        <elementSpec ident="layers">
          <desc>A Wrapper for layers (layer-elements)</desc>
          <content>
            <elementRef key="layer" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="layer">
          <content>
            <textNode/>
          </content>
        </elementSpec>
        <elementSpec ident="annots">
          <desc>A Wrapper for annotations (annot-elements)</desc>
          <content>
            <elementRef key="annot" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="annot">
          <content>
            <textNode/>
          </content>
        </elementSpec>
        <elementSpec ident="sources">
          <desc>A Wrapper for sources (source-elements)</desc>
          <content>
            <elementRef key="source" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="source">
          <classes>
            <memberOf key="att.numbering"/>
            <memberOf key="att.siglum"/>
            <memberOf key="att.target"/>
          </classes>
          <content>
            <textNode/>
          </content>
        </elementSpec>
        <elementSpec ident="editions">
          <desc>A Wrapper for editions (edition-elements)</desc>
          <content>
            <elementRef key="edition" minOccurs="1" maxOccurs="unbounded"/>
          </content>
        </elementSpec>
        <elementSpec ident="edition">
          <classes>
            <memberOf key="att.siglum"></memberOf>
          </classes>
          <content>
            <textNode/>
          </content>
        </elementSpec>
      </schemaSpec>
    </body>
  </text>
</TEI>
