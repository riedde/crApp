<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:crapp="http://baumann-digital.de/ns/crApp" xmlns:functx="http://www.functx.com" xmlns:mei="http://www.music-encoding.org/ns/mei" xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Schema definition (ODD) for the critical apparatus (crApp) of Baumann-Digital (BauDi)</title>
        <author>Dennis Ried</author>
      </titleStmt>
      <publicationStmt>
        <publisher>This file is part of the PhD thesis of Dennis Ried. <address>
            <addrLine>Weimarer Stra√üe 27</addrLine>
            <addrLine>67165 Waldsee</addrLine>
            <addrLine>Germany</addrLine>
          </address>
          <email>ried-musikforschung@mail.de</email>
        </publisher>
        <availability status="restricted">
          <p>This work is licensed under a <ref type="license" target="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License (CC BY 4.0)</ref>.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Born digital data model.</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <include xmlns="http://www.w3.org/2001/XInclude" href="crApp-preamble.xml"/>
    </body>
    <back>
      <div>
        <head>Specifications of crApp</head>
        <schemaSpec ident="crApp" xml:lang="en" start="crApp remark setting" ns="http://baumann-digital.de/ns/crApp">
          <moduleSpec ident="core">
            <desc>Module for attribut classes, macros, datatypes and constraints.</desc>
          </moduleSpec>
          <moduleSpec ident="setting">
            <desc>Module for setting elements.</desc>
          </moduleSpec>
          <moduleSpec ident="remark">
            <desc>Module for remark elements.</desc>
          </moduleSpec>
          <!-- mei elements -->
          <moduleRef key="MEI" source="../../music-encoding/source/mei-source.xml"/>
          <moduleRef key="MEI.shared" source="../../music-encoding/source/mei-source.xml" include="accid barLine caesura chord clef dot dynam ending expansion genre group keyAccid keySig lb lg name note num ornam pad rest space syl tempo"/>
          <moduleRef key="MEI.critapp" source="../../music-encoding/source/mei-source.xml"/>
          <moduleRef key="MEI.cmn" source="../../music-encoding/source/mei-source.xml" include="arpeg attacca beam beamSpan beatRpt bend bracketSpan breath bTrem fermata fTrem gliss graceGrp hairpin halfmRpt harpPedal lv measure meterSig meterSigGrp mNum mRest mRpt mRpt2 mSpace multiRest multiRpt octave oLayer ossia oStaff pedal reh slur tie tuplet tupletSpan"/>
          <moduleRef key="MEI.verse" source="../../music-encoding/source/mei-source.xml"/>
          <moduleRef key="MEI.edittrans" source="../../music-encoding/source/mei-source.xml" include="abbr add choice corr damage del expan gap handShift orig reg sic subst supplied unclear"/>
          <macroSpec ident="crApp.list.lang" module="core" mode="add">
            <desc versionDate="2023-01-02" xml:lang="en">Supported languages.</desc>
            <content>
              <valList mode="add" type="closed">
                <valItem ident="de">
                  <gloss xml:lang="de" versionDate="2023-01-02">deutsch</gloss>
                  <gloss xml:lang="en" versionDate="2023-01-02">german</gloss>
                </valItem>
                <valItem ident="en">
                  <gloss xml:lang="de" versionDate="2023-01-02">englisch</gloss>
                  <gloss xml:lang="en" versionDate="2023-01-02">english</gloss>
                </valItem>
              </valList>
            </content>
          </macroSpec>
          <macroSpec ident="crApp.annot.content" module="core" mode="add">
            <desc versionDate="2023-01-02" xml:lang="en">Supported languages.</desc>
            <content>
                <sequence preserveOrder="false" minOccurs="1" maxOccurs="unbounded">
                  <textNode/>
                  <elementRef key="accid" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="app" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="artic" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="beam" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="chord" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="dynam" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="hairpin" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="note" minOccurs="0" maxOccurs="unbounded"/>
                  <elementRef key="rest" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </content>
          </macroSpec>
          <classSpec type="atts" ident="att.numbering" module="core">
            <desc xml:lang="en" versionDate="2022-04-01">A class for attributes that are used for numbering or counting</desc>
            <attList>
              <attDef ident="no">
                <desc xml:lang="en" versionDate="2022-04-01">An attribute for a numbering. The value must be an integer.</desc>
                <datatype>
                  <dataRef key="integer"/>
                </datatype>
              </attDef>
              <attDef ident="sortNo">
                <desc xml:lang="en" versionDate="2022-04-01">An attribute for ordering purpose. The value must be a positive integer.</desc>
                <datatype>
                  <dataRef key="integer"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec type="atts" ident="att.timing" module="core">
            <desc xml:lang="en" versionDate="2022-04-01">An attribute class for timing concerns.</desc>
            <attList>
              <attDef ident="measure">
                <desc xml:lang="en" versionDate="2022-04-01">An attribute for defining a measure as a time stamp. The value must be a positive integer.</desc>
                <datatype>
                  <dataRef key="integer"/>
                </datatype>
              </attDef>
              <attDef ident="count">
                <desc xml:lang="en" versionDate="2022-04-01">An attribute for defining a count (within a measure) as a detailed part of a time stamp. The value must be a positive integer.</desc>
                <datatype>
                  <dataRef key="integer"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec type="atts" ident="att.siglum" module="core">
            <desc xml:lang="en" versionDate="2022-04-01">An attribute containing a text value to classify a source using an abbreviation (siglum).</desc>
            <attList>
              <attDef ident="siglum">
                <datatype>
                  <dataRef key="text"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec type="atts" ident="att.label" module="core">
            <desc xml:lang="en" versionDate="2022-04-01">An attribute for labelling an element in any way.</desc>
            <attList>
              <attDef ident="label">
                <datatype>
                  <dataRef key="text"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec type="atts" ident="att.target" module="core">
            <desc xml:lang="en" versionDate="2022-04-01">An attribute for defining an explicit target to an other destination. The value must be an URI.</desc>
            <attList>
              <attDef ident="target">
                <datatype>
                  <dataRef key="URI"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <constraintSpec ident="set_ns" scheme="schematron" mode="add">
            <constraint>
              <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" uri="http://baumann-digital.de/ns/crApp"/>
              <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="crapp" uri="http://baumann-digital.de/ns/crApp"/>
              <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mei" uri="http://www.music-encoding.org/ns/mei"/>
              <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="tei" uri="http://www.tei-c.org/ns/1.0"/>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="setting-values-check" module="core" scheme="schematron">
            <desc xml:lang="en" versionDate="2022-04-01">This constraint checks if the called values are defined somewhere in the <gi>setting</gi> element.</desc>
            <constraint>
              <sch:schema xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2">
                <sch:ns uri="http://baumann-digital.de/ns/crApp" prefix="crapp"/>
                <xsl:function name="functx:is-value-in-sequence" as="xs:boolean">
                  <xsl:param name="value" as="xs:anyAtomicType?"/>
                  <xsl:param name="seq" as="xs:anyAtomicType*"/>
                  <xsl:sequence select="$value = $seq"/>
                </xsl:function>
                <xsl:function name="crapp:checkValues">
                  <xsl:param name="elem" as="node()"/>
                  <xsl:param name="attName" as="xs:string"/>
                  <xsl:variable name="lang" select="$elem/ancestor::crapp:setting/crapp:language/@codedval"/>
                  <xsl:variable name="elemName" select="local-name($elem)"/>
                  <xsl:variable name="elemText" select="$elem/text()"/>
                  <xsl:variable name="setVals" select="$elem/ancestor::crapp:crApp//crapp:setting//node()[local-name()=$elemName]"/>
                  <xsl:value-of select="functx:is-value-in-sequence($elemText, if($setVals/attribute::node()[local-name()=$attName])then($setVals/attribute::node()[local-name()=$attName]) else($setVals/crapp:label[@xml:lang=$lang]/text()))"/>
                </xsl:function>
                <xsl:function name="crapp:valuesAllowed">
                  <xsl:param name="elem" as="node()"/>
                  <xsl:param name="attName" as="xs:string"/>
                  <xsl:variable name="lang" select="$elem/ancestor::crapp:setting/crapp:language/@codedval"/>
                  <xsl:variable name="elemName" select="local-name($elem)"/>
                  <xsl:variable name="elemText" select="$elem/text()"/>
                  <xsl:variable name="setVals" select="$elem/ancestor::crapp:crApp//crapp:setting//node()[local-name()=$elemName]"/>
                  <xsl:for-each select="$setVals">
                    <xsl:value-of select="if(attribute::node()[local-name()=$attName]) then(attribute::node()[local-name()=$attName]/string()) else(text())"/>
                  </xsl:for-each>
                </xsl:function>
                <xsl:function name="crapp:valuesAllowedJoined">
                  <xsl:param name="elem" as="node()"/>
                  <xsl:param name="attName" as="xs:string"/>
                  <xsl:value-of select="string-join(crapp:valuesAllowed($elem, $attName), ', ')"/>
                </xsl:function>
                <sch:pattern abstract="true" id="checkValues">
                  <sch:rule context="crapp:remark//node()[local-name()='$elementName']">
                    <sch:assert test="exists(ancestor::crapp:crApp/crapp:setting//node()[local-name()='$elementName'])" role="fatal">No setting for <sch:value-of select="local-name(.)"/> defined. Please define the setting before use.</sch:assert>
                    <sch:report test="exists(ancestor::crapp:crApp/crapp:setting//node()[local-name()='$elementName']) and crapp:checkValues(., '$attrStr') = false()" role="error">The value <sch:value-of select="."/> is not allowed here. Please use one of these: <sch:value-of select="crapp:valuesAllowedJoined(., '$attrStr')"/>.</sch:report>
                  </sch:rule>
                </sch:pattern>
              </sch:schema>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="check-voice-combination" module="core" scheme="schematron">
            <desc xml:lang="en" versionDate="2022-04-01">This constraint checks if the called voices inside a remark are redundant, e.g. if the parent or ancestor group is also called.</desc>
            <constraint>
              <sch:rule context="crapp:remark//crapp:voice">
                <sch:let name="voiceVal" value="./text()"/>
                <sch:let name="voiceGrpVals" value="string-join(ancestor::crapp:remark//crapp:voiceGrp/text(),' ')"/>
                <sch:report test=".[ancestor::crapp:crApp/crapp:setting//crapp:voice[@key = $voiceVal]/ancestor::crapp:voiceGrp[@key][contains($voiceGrpVals, @key)]]" role="warning"><sch:value-of select="$voiceVal"/> is part of <sch:value-of select="tokenize($voiceGrpVals, ' ')[last()]"/>. A second call might be redundant.</sch:report>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <elementSpec ident="annot" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <content>
              <macroRef key="crApp.annot.content"/>
            </content>
          </elementSpec>
          <elementSpec ident="annots" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for annotations (annot-elements)</desc>
            <content>
              <elementRef key="annot" minOccurs="1" maxOccurs="unbounded"/>
              <!-- source="../../MusicEncoding/music-encoding/source/modules/MEI.shared.xml" -->
            </content>
          </elementSpec>
          <elementSpec ident="crApp" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">The root element for the critical apparatus.</desc>
            <classes>
              <memberOf key="att.id"/>
            </classes>
            <content>
              <elementRef key="setting" minOccurs="1" maxOccurs="1"/>
              <elementRef key="remarks" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="class" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">An Element that defines a class or category to be used for classifying.</desc>
            <classes>
              <memberOf key="att.canonical"/>
            </classes>
            <content>
              <alternate>
                <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
                <textNode/>
              </alternate>
            </content>
            <constraintSpec ident="check-values-source" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="class"/>
                  <sch:param name="attrStr" value="codedval"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="classGrp" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for grouping classes.</desc>
            <classes>
              <memberOf key="att.label"/>
            </classes>
            <content>
              <elementRef key="class" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="classifications" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A wrapper to organize classifications.</desc>
            <content>
              <elementRef key="classGrp" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="edition" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <classes>
              <memberOf key="att.numbering"/>
              <memberOf key="att.siglum"/>
              <memberOf key="att.target"/>
            </classes>
            <content>
              <alternate>
                <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
                <textNode/>
              </alternate>
            </content>
            <constraintSpec ident="check-values-edition" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="edition"/>
                  <sch:param name="attrStr" value="siglum"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="editions" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for editions (edition-elements)</desc>
            <content>
              <elementRef key="edition" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="label" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">An Element that defines a class or category to be used for classifying.</desc>
            <classes>
              <memberOf key="att.lang"/>
            </classes>
            <content>
              <textNode/>
            </content>
          </elementSpec>
          <elementSpec ident="language" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">An Element that defines the language used for the settings. Al other labels are treated as translations.</desc>
            <classes>
              <memberOf key="att.canonical"/>
            </classes>
            <content>
              <empty/>
            </content>
            <attList>
              <attDef ident="codedval" mode="change">
                <datatype>
                  <dataRef key="crApp.list.lang"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          <elementSpec ident="layer" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">An Element defining a layer as a subordinated unit of a voice.</desc>
            <classes>
              <memberOf key="att.canonical"/>
            </classes>
            <content>
              <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
            </content>
            <constraintSpec ident="check-values-layer" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="layer"/>
                  <sch:param name="attrStr" value="key"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="layerGrp" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for layer-elements.</desc>
            <classes>
              <memberOf key="att.canonical"/>
            </classes>
            <content>
              <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
              <elementRef key="layer" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="mdiv" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <classes>
              <memberOf key="att.numbering"/>
            </classes>
            <content>
              <alternate>
                <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
                <textNode/>
              </alternate>
            </content>
            <constraintSpec ident="check-values-mdiv" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="mdiv"/>
                  <sch:param name="attrStr" value="no"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="mdivs" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <content>
              <elementRef key="mdiv" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="occurance" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <content>
              <alternate>
                <elementRef key="position" minOccurs="1" maxOccurs="1"/>
                <sequence>
                  <elementRef key="range"/>
                  <elementRef key="range"/>
                </sequence>
              </alternate>
            </content>
          </elementSpec>
          <elementSpec ident="occurances" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <content>
              <elementRef key="occurance" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="part" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">An Element defining a vocal or instrumental part.</desc>
            <classes>
              <memberOf key="att.canonical"/>
            </classes>
            <content>
              <alternate>
                <sequence preserveOrder="true" maxOccurs="1">
                  <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
                  <sequence preserveOrder="false" maxOccurs="unbounded">
                    <elementRef key="layerGrp" minOccurs="0" maxOccurs="unbounded"/>
                    <elementRef key="layer" minOccurs="0" maxOccurs="unbounded"/>
                  </sequence>
                </sequence>
                <textNode/>
              </alternate>
            </content>
            <constraintSpec ident="check-values-voice" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="voice"/>
                  <sch:param name="attrStr" value="key"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="partGrp" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <classes>
              <memberOf key="att.canonical"/>
            </classes>
            <content>
              <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
              <sequence preserveOrder="false" maxOccurs="unbounded">
                <elementRef key="partGrp" minOccurs="0" maxOccurs="unbounded"/>
                <elementRef key="part" minOccurs="0" maxOccurs="unbounded"/>
              </sequence>
            </content>
            <constraintSpec ident="check-values-voiceGrp" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="voiceGrp"/>
                  <sch:param name="attrStr" value="key"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="parts" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for voices (voice-elements)</desc>
            <content>
              <sequence preserveOrder="false" maxOccurs="unbounded">
                <elementRef key="partGrp" minOccurs="0" maxOccurs="unbounded"/>
                <elementRef key="part" minOccurs="0" maxOccurs="unbounded"/>
              </sequence>
            </content>
          </elementSpec>
          <elementSpec ident="position" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <classes>
              <memberOf key="att.timing"/>
            </classes>
          </elementSpec>
          <elementSpec ident="range" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <classes>
              <memberOf key="att.timing"/>
            </classes>
            <constraintSpec ident="range-type-vals" scheme="schematron">
              <constraint>
                <sch:pattern>
                  <sch:rule context="crapp:range">
                    <sch:assert test="parent::node()/crapp:range[1]/@type='start'">The value of @type in the first range must be 'start'</sch:assert>
                    <sch:assert test="parent::node()/crapp:range[2]/@type='stop'">The value of @type in the second range must be 'stop'</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="type" usage="req">
                <valList type="closed">
                  <valItem ident="start">
                    <gloss xml:lang="en">starting point</gloss>
                    <desc xml:lang="en" versionDate="2022-04-01">The location where the range of the occurance starts.</desc>
                  </valItem>
                  <valItem ident="stop">
                    <gloss xml:lang="en">stopping point</gloss>
                    <desc xml:lang="en" versionDate="2022-04-01">The location where the range of the occurance stops.</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          <elementSpec ident="relEditions" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for editions related to the critical apparatus</desc>
            <content>
              <elementRef key="edition" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="relSources" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for sources related to the critical apparatus</desc>
            <content>
              <elementRef key="source" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="relWorks" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for sources related to the critical apparatus</desc>
            <content>
              <elementRef key="work" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="remark" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A critical remark.</desc>
            <classes>
              <memberOf key="att.id"/>
            </classes>
            <content>
              <elementRef key="class" minOccurs="0" maxOccurs="unbounded"/>
              <elementRef key="mdiv"/>
              <elementRef key="occurances" minOccurs="0" maxOccurs="1"/>
              <elementRef key="parts" maxOccurs="1"/>
              <!--            <elementRef key="layers" maxOccurs="1"/>-->
              <elementRef key="annots" minOccurs="1"/>
              <elementRef key="sources" maxOccurs="1"/>
              <elementRef key="editions" maxOccurs="1"/>
            </content>
            <attList>
              <attDef ident="type">
                <valList type="closed">
                  <valItem ident="editorial">
                    <desc xml:lang="en" versionDate="2022-04-01">Eingriff (Hg.)</desc>
                  </valItem>
                  <valItem ident="reading">
                    <desc xml:lang="en" versionDate="2022-04-01">Lesart</desc>
                  </valItem>
                  <valItem ident="annotation">
                    <desc xml:lang="en" versionDate="2022-04-01">Anmerkung (Hg.)</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
            <exemplum xml:lang="en">
              <egXML xmlns="http://www.tei-c.org/ns/Examples" source="crApp-template.xml">
                <remark>
                  <class>dynamic</class>
                  <mdiv>1</mdiv>
                  <occurances>
                    <occurance>
                      <position/>
                      <range type="start" measure="1" count="1"/>
                      <range type="stop" measure="2" count="3"/>
                    </occurance>
                  </occurances>
                  <voices>
                    <voice>flute.1</voice>
                    <voice>oboe.1</voice>
                  </voices>
                  <annots>
                    <annot>No dynamics.</annot>
                  </annots>
                  <sources>
                    <source>SV</source>
                  </sources>
                  <editions>
                    <edition>BauA</edition>
                  </editions>
                </remark>
              </egXML>
            </exemplum>
          </elementSpec>
          <elementSpec ident="remarks" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A wrapper critical remarks.</desc>
            <content>
              <elementRef key="remark" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="setting" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">Die Grundinformationen (Zugeh√∂rige Quellen, Instrumente/Stimmen, Editionen)</desc>
            <classes>
              <memberOf key="att.basic" mode="add"/>
            </classes>
            <content>
              <elementRef key="language"/>
              <elementRef key="mdivs"/>
              <elementRef key="parts"/>
              <elementRef key="relWorks"/>
              <elementRef key="relSources"/>
              <elementRef key="relEditions"/>
              <elementRef key="classifications"/>
            </content>
          </elementSpec>
          <elementSpec ident="source" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <classes>
              <memberOf key="att.numbering"/>
              <memberOf key="att.siglum"/>
              <memberOf key="att.target"/>
            </classes>
            <content>
              <alternate>
                <elementRef key="label" minOccurs="1" maxOccurs="unbounded"/>
                <textNode/>
              </alternate>
            </content>
            <constraintSpec ident="check-values-source" scheme="schematron">
              <constraint>
                <sch:pattern is-a="checkValues">
                  <sch:param name="elementName" value="source"/>
                  <sch:param name="attrStr" value="siglum"/>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="sources" module="remark" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A Wrapper for sources (source-elements)</desc>
            <content>
              <elementRef key="source" minOccurs="1" maxOccurs="unbounded"/>
            </content>
          </elementSpec>
          <elementSpec ident="work" module="setting" ns="http://baumann-digital.de/ns/crApp">
            <desc xml:lang="en" versionDate="2022-04-01">A reference to a work this critical apparatus is made for.</desc>
            <classes>
              <memberOf key="att.target"/>
              <memberOf key="att.id"/>
            </classes>
            <content>
              <textNode/>
            </content>
          </elementSpec>
        </schemaSpec>
      </div>
    </back>
  </text>
</TEI>
