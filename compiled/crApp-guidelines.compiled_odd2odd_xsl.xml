<?xml version="1.0" encoding="utf-8"?><TEI xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:crapp="http://baumann-digital.de/ns/criticalApparatus" xmlns:functx="http://www.functx.com" xmlns:mei="http://www.music-encoding.org/ns/mei" xmlns="http://www.tei-c.org/ns/1.0" xml:base="file:/Users/dried/Repositories/private/crApp/resources/schema/guidelines/crApp-guidelines.odd"><?TEIVERSION Version 4.3.0. Last updated on
        31st August 2021, revision b4f72b1ff?>
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Schema definition (ODD) for the critical apparatus (crApp) of Baumann-Digital (BauDi)</title>
        <author>Dennis Ried</author>
      </titleStmt>
      <publicationStmt>
        <publisher>This file is part of the PhD thesis of Dennis Ried.
          <address>
            <addrLine>Weimarer Straße 27</addrLine>
            <addrLine>67165 Waldsee</addrLine>
            <addrLine>Germany</addrLine>
          </address>
          <email>ried-musikforschung@mail.de</email>
        </publisher>
        <availability status="restricted">
          <p>This work is licensed under a <ref type="license" target="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License (CC BY 4.0)</ref>.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Born digital data model.</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <?xml-model href="https://jenkins.tei-c.org/job/TEIP5-dev/lastStableBuild/artifact/P5/release/xml/tei/odd/p5.nvdl" type="application/xml" schematypens="http://purl.oclc.org/dsdl/nvdl/ns/structure/1.0"?><div xml:id="chap-preamble" xml:lang="de" xml:base="crApp-preamble.xml">
  <head>Einleitung</head>
  <p>Absatz über Baumann, Projekt und so.</p>
  <closer>
    <dateline><name type="settlement">Waldsee</name>, <date when="2022-03-31">31. März 2022</date></dateline>
    <signed><name type="person"><ref target="https://orcid.org/0000-0001-5545-2088">Dennis Ried</ref></name></signed>
  </closer>
</div>
      <?xml-model href="https://jenkins.tei-c.org/job/TEIP5-dev/lastStableBuild/artifact/P5/release/xml/tei/odd/p5.nvdl" type="application/xml" schematypens="http://purl.oclc.org/dsdl/nvdl/ns/structure/1.0"?><div xml:id="chap-docu" xml:lang="de" xml:base="crApp-documentation.xml">
  <head>Die Infrastruktur</head>
  <div xml:id="chap-setting">
    <head>Setting</head>
    <p>Um Kritische Anmerkungen systematisch erfassen zu können, müssen zunächst einige Grundparameter festgelegt werden: Welche Quellen gibt es? Welche Instrumente sind beteiligt? Wird auf Editionen referenziert? Usw.</p>
    <p>Für die Erfassung der Kritischen Anmerkungen ist es grundlegend, dass es die zuvor genannten Objekte definiert sind. Die Abhängigkeiten untereinander (bspw. bei den Quellen [Stemma]), ist an dieser Stelle aus technischer Sicht noch nicht relevant; die Abhängigkeiten untereinander haben keinen Einfluss auf das Datenmodell.</p>
    <p>Im sogenannten Setting werden die Weichen für die spätere Kodierung gestellt, weshalb dieser Bereich im Folgenden kurz dargestellt werden wird.</p>
    <specList>
      <specDesc key="setting"/>
    </specList>
    <p>Hierbei handelt es sich um einen Wrapper, der sämtliche Defintionen für die vorliegende Datei enthält. Dieses Element dient allein der Definition der Infrastruktur.</p>
    <div>
      <head>Musikalische Struktur</head>
      <specList>
        <specDesc key="mdivs"/>
        <specDesc key="mdiv"/>
      </specList>
      <p>Das an MEI angelehte Element <gi>mdiv</gi> steht für einen musikalsichen Abschnitt (musical division). Dieses generische Element kann verwendet werden, um Sätze eines Werkes, Lieder oder Stücke einer Sammlung, Nummern einer Oper oder sonstige Strukturen abzubilden. Die Numerierung der <gi>mdiv</gi> Elemente mit dem Atttribut <att>no</att> ist obligatorisch und als technische Zählung zu betrachten. Als Werte sind ausschließlich Natürliche Zahlen (inklusive der <val>0</val>) erlaubt. Diese Zählung ist für die spätere Zuordnung und Sortierung maßgeblich, weshalb hier bspw. keine römische Zählung erlaubt ist. Zur verdeutlichung worum es sich konkret handelt, kann der Satztitel inkl. einer Zählung hinzugefügt werden. Der Textknoten des Elementes fungiert als Freitext.
        </p><p>Das Element <gi>mdivs</gi> fungiert als Wrapper, der alle <gi>mdiv</gi> Elemente in sich beherbergt.</p>
    </div>
    <div>
      <head>Instrumentation bzw. Besetzung</head>
      <specList>
        <specDesc key="voices"/>
        <specDesc key="voiceGrp"/>
        <specDesc key="voice"/>
      </specList>
      <p>Die Instrumentation kann sich äußerst komplex gestalten, weshalb es hier nötig sein kann, dass einzelne Stimmen zu Gruppen zusammengefasst werden. Das Element <gi>voices</gi> ist hier wieder ein Wrapper, der die Definition der Instrumentation enthält, egal wie diese organisiert ist.</p>
      <p>Das Element <gi>voiceGrp</gi> ist ebenfalls ein Wrapper, der zur Gruppierung verwendet wird. Dies kann auch auf mehreren Ebenen geschehen, wie das folgende Beispiel zeigt.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <voiceGrp key="woods">
          <voiceGrp key="flutes">
            <voice key="flute.1">Flöte I</voice>
            <voice key="flute.2">Flöte II</voice>
          </voiceGrp>
        </voiceGrp>
      </egXML>
      <p>Der verwendete Wert im Atttribut <att>key</att> muss eindeutig sein, da hierüber die Zuordnung der Anmerkungen zu den betroffenen Stimmen hergestellt wird. Es empfielt sich die Werte wie im vorangegangenen Beispiel generisch zu wählen unter Vermeidung von Umlauten und Leerzeichen, da damit technische Probleme wie bspw. eine unpraktische Sortierung in den Fehlermeldungen vermieden wird.</p>
      <p>Der Grund, der für eine Gruppierung spricht ist, dass damit später auf eine ganze Stimmgruppe verwiesen werden kann wie z.B. <val>flutes</val> oder <val>woods</val>, ohne jede Stimme einzeln nennen zu müssen.</p>
      <p>Das Datenmodell ist in der Lage eine gewisse Kompexität (siehe voriges Beispiel) abzubilden, die gleichzeitig durch das Schema validiert werden kann.</p>
    </div>
    <div xml:id="relWorks">
      <head>Assoziierte Werke (related works)</head>
      <specList>
        <specDesc key="relWorks"/>
        <specDesc key="work"/>
      </specList>
      <p>An dieser Stelle erfolgt die Zuordnung der kritischen Anmerkungen zu einem Werk. Dies kann mittels ID-Verweis geschehen (<att>key</att>) oder über einen expliziten Dateipfad, der im Attribut <att>target</att> angegeben wird. Hier ist zu beachten, welchen Zweck die Zuordnung verfolgen soll bzw. in welchen Kontext die Kritischen Anmekrungen eingebunden werden.</p>
      <p>Sollen die erfassten Anmerkungen über die crApp-Applikation visualisiert werden, so ist es es ausreichend, wenn die Referenzierung über <att>key</att> erfolgt. Vorausgesetzt natürlich, dass sich die Referenzdatensätze in der selben Datenbank befinden in der die Applikation installiert ist.</p>
      <p>Im Falle, dass der Pfad zum Referenzdatensatz an einen anderen Ort zeigen soll, kann der entsprechende Pfad als Wert von <att>target</att> eingegeben werden. Dies bietet sich beispielsweise dann an, wenn lokal Transformationen durchgeführt werden, bei denen eine Ansprache über eine ID zu viel Rechenzeit erfordern würden.</p>
    </div>
    <div xml:id="relSources">
      <head>Assoziierte Quellen (related sources)</head>
      <specList>
        <specDesc key="relSources"/>
        <specDesc key="source"/>
      </specList>
      <p>Die Refernzierung von Refernzdatensätzen zu Quellen erfolgt wie unter <ref target="#relWorks">Assoziierte Werke</ref> beschrieben.</p>
      <p>Im Vergleich zu <gi>work</gi> weist das Element <gi>source</gi> zwei Besonderheiten auf: Zum einen wird ein <att>siglum</att> definiert, welches nötig ist, um betroffene Quellen in den Einzelanmerkungen zu referenzieren. Weiter kann das Attribut <att>sortNo</att> dafür verwendet werden, um eine Sortierreihenfolge für die Siglen festzulegen.</p>
    </div>
    <div xml:id="relEditions">
      <head>Assoziierte Editionen (related editions)</head>
      <specList>
        <specDesc key="relEditions"/>
        <specDesc key="edition"/>
      </specList>
      <p>Diese Elemente verhalten sich analog zu den <ref target="#relSources">Quellen</ref>.</p>
    </div>
    <div xml:id="classifications">
      <head>Klassifikationen</head>
      <specList>
        <specDesc key="classifications"/>
        <specDesc key="classGrp"/>
        <specDesc key="class"/>
      </specList>
      <p>Klassifikationen sind das A und O bei der Erfassung strukturierter Daten. Diese sind unabdingbar, wenn Anmerkungen bestimmten Gruppen zugeordnet oder im Nachhinnein Gruppiert oder ausgewertet werden sollen.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <classifications>
          <classGrp label="sourceType">
            <class key="ms">Handschrift</class>
            <class key="pr">Druck</class>
          </classGrp>
        </classifications>
      </egXML>
      <p>Im angeführten Beispiel wird eine Klassifikationsgruppe gezeigt, die Arten von Quellen definiert; hier: Handschriften (<val>ms</val>=manuscripts) und Drucke (<val>pr</val>=prints).</p>
      <p>Es können beliebig viele <gi>classGrp</gi>s definiert werden, die wiederum beliebig viele <gi>class</gi> Elemente enthalten.</p>
    </div>
  </div>
  <div>
    <head>Die Kritische Anmerkung</head>
    <specList>
      <specDesc key="remarks"/>
      <specDesc key="remark"/>
    </specList>
    <p>Der Wrapper <gi>remarks</gi> beinhaltet die Kritischen Anmerkungen. Das Element <gi>remark</gi> stellt die Einzelanmerkung dar.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <remark>
        <class>ms</class>
        <mdiv>1</mdiv>
        <occurances>
          <occurance>
            <position/>
            <!--                  <position measure="1" count="1"/>-->
            <!--<range type="start" measure="1" count="1"/>
                    <range type="stop" measure="2" count="3"/>-->
          </occurance>
        </occurances>
        <voices>
          <voice>flute.1</voice>
          <voice>oboe.1</voice>
        </voices>
        <annots>
          <annot>Dies ist eine Anmekrung von großer Wichtigkeit.</annot>
        </annots>
        <sources>
          <source>SV</source>
        </sources>
        <editions>
          <edition>BauA</edition>
        </editions>
      </remark>
    </egXML>
    <specList>
      <specDesc key="class"/>
    </specList>
    <p>Das Element <gi>class</gi> dient der Klassifizierung. Die Werte, die als Text eingegeben werden können, sind in <gi>setting</gi> in der Klassifizierung definiert. Wird ein Wert eingegeben, der zuvor nicht definiert wurde wirft die Schematron-Validierung einen Fehler aus.</p>
    <specList>
      <specDesc key="mdiv"/>
    </specList>
    <p>Über <gi>mdiv</gi> erfolgt eine Zuordnung zu dem musikalischen Abschnitt, in dem die Anmerkung vorkommt. Für den eher seltenen Fall, dass eine Anmerkung sich auf mehrere Sätze bezieht (bspw. bei einer Parallelstelle, die in einem anderen Satz in Erscheinung tritt), können mehrere <gi>mdiv</gi> Elemente verwendet werden. In diesem Falle wird von der Schematron-Validierung eine Information angezeigt, dass dieses Verfahren möglich jedoch eher unüblich ist. Ein Validierungsfehler wird dadurch nicht verursacht. Im Gegensatz dazu kann auf <gi>mdiv</gi> verzichtet werden, wenn es sich um eine Generalanmerkung handelt, die für das gesamte Werk oder eine einzelne Quelle gilt.</p>
    <specList>
      <specDesc key="occurances"/>
      <specDesc key="occurance"/>
      <specDesc key="position"/>
    </specList>
    <p>Das Element <gi>occurances</gi> ist ein Wrapper und verzeichnet diejenigen Stellen, an denen besagte Anmerkung von Relevanz ist. Da es durchaus sein kann, dass eine Anmerkung des öfteren von Relevanz ist (bspw. in den Takten 2,4,5 und 8 enden die Bögen bereits eine Achtel früher), ist es auch möglich das Element <gi>occurance</gi> mehrfach zu verwenden. Ziel dieser Kodierung ist es, dass ein und diesselbe Anmerkung, die für mehrere Stellen gilt nicht mehrfach geschrieben wird, sondern die einzelnen Stellen dem Befund zugeordnet werden.</p>
    <p>Die Stelle kann auf zwei verschiedene Arten identidiziert werden: als Stelle (<gi>position</gi>) oder als Bereich. Im ersten Fall handelt es sich um ein Vorkommen dessen Position sich durch eine Taktzahl und ggf. durch eine Zählzeit angeben lässt. Eine Schema-basierte Validierung von Taktzahlen und Zählzeiten ist derzeit nicht verfügbar, da eine Erfassung der Taktstruktur sowie des möglicherweise wechselnden Metrums zur Zeit nicht vorgesehen ist. Es ist allerdings denkbar, dass diese Struktur später über die referenzierten Quellen eingebunden werden könnte.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <occurance>
        <position measure="2" count="3"/>
      </occurance>
    </egXML>
    <p>Betrifft die Anmerkung nicht eine einzelne Position, sondern einen Bereich (bspw. Takt 1 Zählzeit 1 bis Takt 3 Zählzeit 4 ohne Dynamikangaben) kann dieser ebenfalls über das Element <gi>position</gi> unter Verwendung des Attributes <att>type</att> (Werte <val>start</val>/<val>stop</val>) erfasst werden.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <occurance>
        <position type="start" measure="1" count="1"/>
        <position type="stop" measure="3" count="4"/>
      </occurance>
    </egXML>
  </div>
</div>
    </body>
    <back>
      <div>
        <head>Specifications of crApp</head>
        <!--<?xml-model href="https://jenkins.tei-c.org/job/TEIP5-dev/lastStableBuild/artifact/P5/release/xml/tei/odd/p5.nvdl" type="application/xml" schematypens="http://purl.oclc.org/dsdl/nvdl/ns/structure/1.0"?>--><schemaSpec xmlns:teix="http://www.tei-c.org/ns/Examples" ident="crApp" xml:lang="en" start="apparatus" ns="http://baumann-digital.de/ns/criticalApparatus" xml:base="../specs/crApp-schemaSpecs.odd.xml" defaultExceptions="http://www.tei-c.org/ns/1.0 teix:egXML" source="/Users/dried/Repositories/static/tei-4.3.0/xml/tei/odd/p5subset.xml"><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.key">
    <desc xml:lang="en" versionDate="2022-04-01">A class for key like attributes.</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Eine Klasse für Attribute, die Schlüssel angeben.</desc>
    <attList>
      <attDef ident="key">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute that gives a Key as a pointer to a resource.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut, das einen Schlüssel (Key) angibt, der auf eine bestimmte Ressource verweist.</desc>
        <datatype>
          <dataRef key="text"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.id">
    <desc xml:lang="en" versionDate="2022-04-01">A class for id like attributes.</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Eine Klasse für ID-ähnliche Attribute.</desc>
    <attList>
      <attDef ident="xml:id">
        <desc xml:lang="en" versionDate="2022-04-01">ID of the file. Must be unique in the context of this framework.</desc>
        <datatype>
          <dataRef key="ID"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.numbering">
    <desc xml:lang="en" versionDate="2022-04-01">A class for attributes that are used for numbering or counting.</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Eine Klasse für Attribute, die zur Nummerierung oder zum Zählen verwendet werden.</desc>
    <attList>
      <attDef ident="no">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute for a numbering. The value must be an integer.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut zur Nummerierung. Der Wert muss eine Zahl sein.</desc>
        <datatype>
          <dataRef key="integer"/>
        </datatype>
      </attDef>
      <attDef ident="sortNo">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute for ordering purpose. The value must be a positive integer.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut, das für Sortierungsbelange verwendet wird. Der Wert muss eine positive Zahl sein.</desc>
        <datatype>
          <dataRef key="integer"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.timing">
    <desc xml:lang="en" versionDate="2022-04-01">An attribute class for timing concerns.</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Eine Klasse für Attribute, die zeitliche Einordnungen betreffen.</desc>
    <attList>
      <attDef ident="measure">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute for defining a measure as a (part of a) time stamp. The value must be a positive integer.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut mit dem ein Takt als (Teil eines) Zeitstempel(s) angegeben werden kann. Der Wert muss eine positive Zahl sein.</desc>
        <datatype>
          <dataRef key="integer"/>
        </datatype>
      </attDef>
      <attDef ident="count">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute for defining a count (within a measure) as detailed part of a time stamp. The value must be a positive integer.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut um eine Zählzeit (in einem Takt) anzugeben, als Teil einer Positionsagabe. Der Wert muss iene positive Zahl sein.</desc>
        <datatype>
          <dataRef key="integer"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.siglum">
    <desc xml:lang="en" versionDate="2022-04-01">An attribute class for classifying using an abbreviation (e.g., a siglum).</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Eine Attributklasse zur Klassifizierung mittels einer Abkürzung (z.B. durch ein Siglum).</desc>
    <attList>
      <attDef ident="siglum">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute containing a text value to classify a source using an abbreviation (siglum).</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut, das einen Text-Wert enthält, um eine Quelle mittels einer Abkürzung (Siglum) zu klassifizieren.</desc>
        <datatype>
          <dataRef key="text"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.label">
    <desc xml:lang="en" versionDate="2022-04-01">A class for labelling attributes.</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Ein Klasse für Beschriftungs-Attribute.</desc>
    <attList>
      <attDef ident="label">
        <desc xml:lang="en" versionDate="2022-04-19">An attribute for labelling an element in any way.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut, um Elemente zu Beschriften.</desc>
        <datatype>
          <dataRef key="text"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><classSpec rend="add" module="derived-module-crApp" type="atts" ident="att.target">
    <desc xml:lang="en" versionDate="2022-04-01">A class for attributes to defining targets.</desc>
    <desc xml:lang="de" versionDate="2022-04-19">Eine Klasse für Attribute, die Ziele definieren.</desc>
    <attList>
      <attDef ident="target">
        <desc xml:lang="en" versionDate="2022-04-01">An attribute for defining an explicit target to an other destination. The value must be an URI.</desc>
        <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut, um ein (externes) Ziel (Dokument) explizit anzugeben. Als Wert ist eine URI erforderlich.</desc>
        <datatype>
          <dataRef key="URI"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec><constraintSpec ident="setting-check-text-values" scheme="schematron">
    <desc xml:lang="en" versionDate="2022-04-01">This constraint checks if the called values are defined somewhere in the <gi>setting</gi> element.</desc>
    <constraint>
      <sch:schema xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2">
        <sch:ns uri="http://baumann-digital.de/ns/criticalApparatus" prefix="crapp"/>
        <xsl:function name="functx:is-value-in-sequence" as="xs:boolean">
          <xsl:param name="value" as="xs:anyAtomicType?"/>
          <xsl:param name="seq" as="xs:anyAtomicType*"/>
          <xsl:sequence select="$value = $seq"/>
        </xsl:function>
        <xsl:function name="crapp:checkValues">
          <xsl:param name="elem" as="node()"/>
          <xsl:param name="attName" as="xs:string"/>
          <xsl:variable name="elemName" select="local-name($elem)"/>
          <xsl:variable name="elemText" select="$elem/text()"/>
          <xsl:variable name="setVals" select="$elem/ancestor::crapp:apparatus//crapp:setting//node()[local-name()=$elemName]"/>
          <xsl:value-of select="functx:is-value-in-sequence($elemText, if($setVals/attribute::node()[local-name()=$attName])then($setVals/attribute::node()[local-name()=$attName]) else($setVals/text()))"/>
        </xsl:function>
        <xsl:function name="crapp:valuesAllowed">
          <xsl:param name="elem" as="node()"/>
          <xsl:param name="attName" as="xs:string"/>
          <xsl:variable name="elemName" select="local-name($elem)"/>
          <xsl:variable name="elemText" select="$elem/text()"/>
          <xsl:variable name="setVals" select="$elem/ancestor::crapp:apparatus//crapp:setting//node()[local-name()=$elemName]"/>
          <xsl:for-each select="$setVals">
            <xsl:value-of select="if(attribute::node()[local-name()=$attName]) then(attribute::node()[local-name()=$attName]/string()) else(text())"/>
          </xsl:for-each>
        </xsl:function>
        <xsl:function name="crapp:valuesAllowedJoined">
          <xsl:param name="elem" as="node()"/>
          <xsl:param name="attName" as="xs:string"/>
          <xsl:value-of select="string-join(crapp:valuesAllowed($elem, $attName), ', ')"/>
        </xsl:function>
        <sch:pattern abstract="true" id="checkValues">
          <sch:rule context="crapp:remark//node()[local-name()='$elementName']">
            <sch:assert test="exists(ancestor::crapp:apparatus/crapp:setting//node()[local-name()='$elementName'])" role="fatal">No setting for <sch:value-of select="local-name(.)"/> defined. Please define the setting before use.</sch:assert>
            <sch:report test="exists(ancestor::crapp:apparatus/crapp:setting//node()[local-name()='$elementName']) and crapp:checkValues(., '$attrStr') = false()" role="error">The value <sch:value-of select="."/> is not allowed here. Please use one of these: <sch:value-of select="crapp:valuesAllowedJoined(., '$attrStr')"/>.</sch:report>
          </sch:rule>
        </sch:pattern>
      </sch:schema>
    </constraint>
  </constraintSpec><constraintSpec ident="check-voice-combination" scheme="schematron">
    <desc xml:lang="en" versionDate="2022-04-01">This constraint checks if the called voices inside a remark are redundant, e.g., if the parent or ancestor group is also called.</desc>
    <constraint>
      <sch:rule context="crapp:remark//crapp:voice">
        <sch:let name="voiceVal" value="./text()"/>
        <sch:let name="voiceGrpVals" value="string-join(ancestor::crapp:remark//crapp:voiceGrp/text(),' ')"/>
        <sch:report test=".[ancestor::crapp:apparatus/crapp:setting//crapp:voice[@key = $voiceVal]/ancestor::crapp:voiceGrp[@key][contains($voiceGrpVals, @key)]]" role="warning"><sch:value-of select="$voiceVal"/> is part of <sch:value-of select="tokenize($voiceGrpVals, ' ')[last()]"/>. A second call might be redundant.</sch:report>
      </sch:rule>
    </constraint>
  </constraintSpec><elementSpec rend="add" ident="apparatus" module="setting"><desc xml:lang="en" versionDate="2022-04-01">The root element for the critical apparatus.</desc><desc xml:lang="de" versionDate="2022-04-19">Das Wurzelelement des Kritischen Apparates.</desc><classes>
      <memberOf key="att.id"/>
    </classes><content>
      <elementRef key="setting" minOccurs="1" maxOccurs="1"/>
      <elementRef key="remarks" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="setting" module="setting"><desc xml:lang="en" versionDate="2022-04-19">Basic information, e.g., relates Sources, Instrumentation/Voices, Editions.</desc><desc xml:lang="de" versionDate="2022-04-01">Die Grundinformationen, bspw. zugehörige Quellen, Instrumente/Stimmen, Editionen.</desc><content>
      <elementRef key="editors"/>
      <elementRef key="mdivs"/>
      <elementRef key="voices"/>
      <elementRef key="relWorks"/>
      <elementRef key="relSources"/>
      <elementRef key="relEditions"/>
      <elementRef key="classifications"/>
    </content></elementSpec><elementSpec rend="add" ident="editors" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A wrapper for <gi>editor</gi> elements.</desc><desc xml:lang="de" versionDate="2022-04-19">Ein Wrapper für <gi>editor</gi> Elemente.</desc><content>
      <elementRef key="editor" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="editor" module="setting"><desc xml:lang="en" versionDate="2022-04-01">An element that defines an editor responsible for the content.</desc><classes>
      <memberOf key="att.key"/>
    </classes><content>
      <textNode/>
    </content></elementSpec><elementSpec rend="add" ident="remarks" module="remark"><desc xml:lang="en" versionDate="2022-04-01">A wrapper for critical <gi>remark</gi> elements.</desc><desc xml:lang="de" versionDate="2022-04-19">Ein Wrapper für <gi>remark</gi> Elemente.</desc><content>
      <elementRef key="remark" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="remark" module="remark"><desc xml:lang="en" versionDate="2022-04-01">A critical remark.</desc><desc xml:lang="de" versionDate="2022-04-19">Ein kritische Anmerkung.</desc><classes>
      <memberOf key="att.id"/>
    </classes><content>
      <elementRef key="class" minOccurs="0" maxOccurs="unbounded"/>
      <elementRef key="mdiv" minOccurs="0" maxOccurs="unbounded"/>
      <elementRef key="occurances" minOccurs="0" maxOccurs="1"/>
      <elementRef key="voices" maxOccurs="1"/>
      
      <elementRef key="annots" minOccurs="1"/>
      <elementRef key="sources" maxOccurs="1"/>
      <elementRef key="editions" maxOccurs="1"/>
    </content><attList><attDef ident="type">
        <valList type="closed">
          <valItem ident="editorial">
            <desc xml:lang="en" versionDate="2022-04-19">Intervention (ed.)</desc>
            <desc xml:lang="de" versionDate="2022-04-01">Eingriff (Hg.)</desc>
          </valItem>
          <valItem ident="reading">
            <desc xml:lang="en" versionDate="2022-04-19">Reading</desc>
            <desc xml:lang="de" versionDate="2022-04-01">Lesart</desc>
          </valItem>
          <valItem ident="annotation">
            <desc xml:lang="en" versionDate="2022-04-19">Annotation (ed.)</desc>
            <desc xml:lang="de" versionDate="2022-04-01">Anmerkung (Hg.)</desc>
          </valItem>
        </valList>
      </attDef></attList><exemplum xml:lang="en">
      <egXML xmlns="http://www.tei-c.org/ns/Examples" source="crApp-template.xml">
        <remark>
          <class>dynamic</class>
          <mdiv>1</mdiv>
          <occurances>
            <occurance>
              <position/>
              <position type="start" measure="1" count="1"/>
              <position type="stop" measure="2" count="3"/>
            </occurance>
          </occurances>
          <voices>
            <voice>flute.1</voice>
            <voice>oboe.1</voice>
          </voices>
          <annots>
            <annot>No dynamics.</annot>
          </annots>
          <sources>
            <source>SV</source>
          </sources>
          <editions>
            <edition>BauA</edition>
          </editions>
        </remark>
      </egXML>
    </exemplum></elementSpec><elementSpec rend="add" ident="classifications" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A wrapper to organize classifications.</desc><content>
      <elementRef key="classGrp" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="classGrp" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for grouping classes.</desc><classes>
      <memberOf key="att.label"/>
    </classes><content>
      <elementRef key="class" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="class" module="setting"><desc xml:lang="en" versionDate="2022-04-01">An Element that defines a class or category to be used for classifying.</desc><classes>
      <memberOf key="att.key"/>
    </classes><content>
      <textNode/>
    </content><constraintSpec ident="check-values-source" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="class"/>
          <sch:param name="attrStr" value="key"/>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="mdivs" module="setting"><content>
      <elementRef key="mdiv" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="mdiv" module="setting"><classes>
      <memberOf key="att.numbering"/>
    </classes><content>
      <textNode/>
    </content><constraintSpec ident="check-values-mdiv" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="mdiv"/>
          <sch:param name="attrStr" value="no"/>
        </sch:pattern>
      </constraint>
    </constraintSpec><constraintSpec ident="range-type-vals" scheme="schematron">
      <constraint>
        <sch:pattern>
          <sch:rule context="crapp:remark">
            <sch:assert test="count(crapp:mdiv) = 1" role="info">Please note there is more then one occurance of mdiv.</sch:assert>
          </sch:rule>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="occurances" module="remark"><content>
      <elementRef key="occurance" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="occurance" module="remark"><content>
      <alternate minOccurs="1" maxOccurs="1"><elementRef key="position" minOccurs="1" maxOccurs="2"/></alternate>
    </content></elementSpec><elementSpec rend="add" ident="position" module="remark"><classes>
      <memberOf key="att.timing"/>
    </classes><constraintSpec ident="range-type-vals" scheme="schematron">
      <constraint>
        <sch:pattern>
          <sch:rule context="crapp:position">
            <sch:report test="if(count(parent::node()/crapp:position) = 1) then(self::node()[@type])else(false())">If there is only one position @type is not allowed.</sch:report>
            <sch:assert test="if(count(parent::node()/crapp:position) = 2) then(parent::node()/crapp:position[1]/@type='start')else(true())">The value of @type in the first position must be 'start'</sch:assert>
            <sch:assert test="if(count(parent::node()/crapp:position) = 2) then(parent::node()/crapp:position[2]/@type='stop')else(true())">The value of @type in the second position must be 'stop'</sch:assert>
          </sch:rule>
        </sch:pattern>
      </constraint>
    </constraintSpec><attList><attDef ident="type" usage="opt">
        <valList type="closed">
          <valItem ident="start">
            <gloss xml:lang="en">starting point</gloss>
            <desc xml:lang="en" versionDate="2022-04-01">The location where the range of the occurance starts.</desc>
          </valItem>
          <valItem ident="stop">
            <gloss xml:lang="en">stopping point</gloss>
            <desc xml:lang="en" versionDate="2022-04-01">The location where the range of the occurance stops.</desc>
          </valItem>
        </valList>
      </attDef></attList></elementSpec><elementSpec rend="add" ident="voices" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for voices (voice-elements)</desc><content>
      <sequence minOccurs="1" maxOccurs="unbounded"><elementRef key="voiceGrp" minOccurs="0" maxOccurs="unbounded"/><elementRef key="voice" minOccurs="0" maxOccurs="unbounded"/></sequence>
    </content></elementSpec><elementSpec rend="add" ident="voiceGrp" module="setting"><classes>
      <memberOf key="att.key"/>
    </classes><content>
      <alternate minOccurs="1" maxOccurs="1"><sequence minOccurs="1" maxOccurs="unbounded"><elementRef key="voiceGrp" minOccurs="0" maxOccurs="unbounded"/><elementRef key="voice" minOccurs="0" maxOccurs="unbounded"/></sequence><textNode/></alternate>
    </content><constraintSpec ident="check-values-voiceGrp" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="voiceGrp"/>
          <sch:param name="attrStr" value="key"/>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="voice" module="setting"><classes>
      <memberOf key="att.key"/>
    </classes><content>
      <textNode/>
    </content><constraintSpec ident="check-values-voice" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="voice"/>
          <sch:param name="attrStr" value="key"/>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="layers" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for layers (layer-elements)</desc><content>
      <elementRef key="layer" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="layer" module="setting"><content>
      <textNode/>
    </content><constraintSpec ident="check-values-layer" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="layer"/>
          <sch:param name="attrStr" value="key"/>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="annots" module="remark"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for annotations (annot-elements)</desc><content>
      <elementRef key="annot" minOccurs="1" maxOccurs="unbounded"/>
      
    </content></elementSpec><elementSpec rend="add" ident="annot" module="remark"><content>
      
      <textNode/>
      
      
    </content><attList><attDef ident="resp">
          <desc xml:lang="en" versionDate="2022-04-01">An attribute that gives a key of a person that is responsible for the content.</desc>
          <desc xml:lang="de" versionDate="2022-04-19">Ein Attribut, das den Schlüssel (Key) einer Person angibt, die für den Inhalt verantwortlich ist.</desc>
          <datatype>
            <dataRef key="text"/>
          </datatype>
      </attDef></attList></elementSpec><elementSpec rend="add" ident="relSources" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for sources related to the critical apparatus</desc><content>
      <elementRef key="source" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="sources" module="remark"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for sources (source-elements)</desc><content>
      <elementRef key="source" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="source" module="setting"><classes>
      <memberOf key="att.key"/>
      <memberOf key="att.numbering"/>
      <memberOf key="att.siglum"/>
      <memberOf key="att.target"/>
    </classes><content>
      <textNode/>
    </content><constraintSpec ident="check-values-source" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="source"/>
          <sch:param name="attrStr" value="siglum"/>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="relEditions" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for editions related to the critical apparatus</desc><content>
      <elementRef key="edition" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="editions" module="remark"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for editions (edition-elements)</desc><content>
      <elementRef key="edition" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="edition" module="setting"><classes>
      <memberOf key="att.key"/>
      <memberOf key="att.numbering"/>
      <memberOf key="att.siglum"/>
      <memberOf key="att.target"/>
    </classes><content>
      <textNode/>
    </content><constraintSpec ident="check-values-edition" scheme="schematron">
      <constraint>
        <sch:pattern is-a="checkValues">
          <sch:param name="elementName" value="edition"/>
          <sch:param name="attrStr" value="siglum"/>
        </sch:pattern>
      </constraint>
    </constraintSpec></elementSpec><elementSpec rend="add" ident="relWorks" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A Wrapper for sources related to the critical apparatus</desc><content>
      <elementRef key="work" minOccurs="1" maxOccurs="unbounded"/>
    </content></elementSpec><elementSpec rend="add" ident="work" module="setting"><desc xml:lang="en" versionDate="2022-04-01">A reference to a work this critical apparatus is made for.</desc><classes>
      <memberOf key="att.target"/>
      <memberOf key="att.key"/>
    </classes><content>
      <textNode/>
    </content></elementSpec></schemaSpec>
      </div>
    </back>
  </text>
</TEI>